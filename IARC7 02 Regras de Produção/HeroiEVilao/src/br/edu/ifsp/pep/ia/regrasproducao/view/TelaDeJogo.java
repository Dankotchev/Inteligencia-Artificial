package br.edu.ifsp.pep.ia.regrasproducao.view;

import br.edu.ifsp.pep.ia.regrasproducao.controller.RegrasProducao;
import br.edu.ifsp.pep.ia.regrasproducao.model.Bonus;
import br.edu.ifsp.pep.ia.regrasproducao.model.Heroi;
import br.edu.ifsp.pep.ia.regrasproducao.model.Vilao;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.*;

public class TelaDeJogo extends javax.swing.JFrame implements ActionListener {

    private Heroi heroi;
    private Vilao vilao;
    private Bonus bonus;
    private RegrasProducao regraProd;

    private JButton[][] buttons;
    private int linha, coluna;

    private JPanel infoPanel;
    private JLabel vidaVilaoLabel;
    private JLabel jogadasHeroiLabel;

    private Timer timer;

    /**
     * Creates new form TelaDeJogo
     */
    public TelaDeJogo(int linhas, int colunas) {
        this.heroi = new Heroi(linhas, colunas);
        this.vilao = new Vilao(linhas, colunas, 3);
        this.bonus = new Bonus(linhas, colunas);
        this.buttons = new JButton[linhas][colunas];

        this.linha = linhas;
        this.coluna = colunas;

        setTitle("A Grande Aventura Heroica do Herói");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new GridLayout(this.linha, this.coluna));

        for (int i = 0; i < linhas; i++) {
            for (int j = 0; j < colunas; j++) {
                JButton button = new JButton("                 ");
                button.setEnabled(false);
                buttons[i][j] = button;
                add(button);
            }
        }

        atualizarPosicoes();

        pack();
        setLocationRelativeTo(null);
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        //set
        setVisible(true);

        this.timer = new Timer(500, this);
        this.timer.start();
    }

    private void atualizarPosicoes() {
        for (int i = 0; i < this.linha; i++) {
            for (int j = 0; j < this.coluna; j++) {
                if ((i == heroi.getEixoX() && j == heroi.getEixoY())
                        && (i == this.vilao.getEixoX() && j == this.vilao.getEixoY())) {
                    buttons[i][j].setText(" HERÓI --> VILÃO ");
                    buttons[i][j].setForeground(Color.BLACK);
                    buttons[i][j].setFont(new Font("Arial", Font.BOLD, 12));
                } else if (i == heroi.getEixoX() && j == heroi.getEixoY()) {
                    buttons[i][j].setText("      HERÓI      ");
                    buttons[i][j].setForeground(Color.BLUE);
                    buttons[i][j].setFont(new Font("Arial", Font.BOLD, 12));
                } else if (i == this.vilao.getEixoX() && j == this.vilao.getEixoY()
                        && this.vilao.getVidasRestantes() != 0) {
                    buttons[i][j].setText("      VILÃO      ");
                    buttons[i][j].setForeground(Color.RED);
                    buttons[i][j].setFont(new Font("Arial", Font.BOLD, 12));
                } else if (i == this.bonus.getEixoX() && j == bonus.getEixoY()) {
                    buttons[i][j].setText("      BÔNUS      ");
                    buttons[i][j].setForeground(Color.GREEN);
                    buttons[i][j].setFont(new Font("Arial", Font.BOLD, 12));
                    if (this.bonus.isUtilizado())
                        buttons[i][j].setForeground(Color.GRAY);

                } else
                    buttons[i][j].setText("                 "); // Outras posições
            }
        }
    }

    public void regrasDeProducao() {
        int comando;
        this.regraProd = new RegrasProducao(this.heroi, this.vilao, this.bonus);

        if (this.vilao.getVidasRestantes() != 0) {

            comando = this.regraProd.obterProximaJogada();
            switch (comando) {
                case 0:
                    this.heroi.setBonus2x(true);
                    this.heroi.moverBaixo();
                    break;

                case 1:
                    this.heroi.moverBaixo();
                    break;

                case 2:
                    this.heroi.moverCima();
                    break;

                case 3:
                    this.heroi.moverDireita();
                    break;

                case 4:
                    this.heroi.moverEsquerda();
                    break;

                case 5:
                    this.vilao.receberDano(false);
                    break;
                case 6:
                    this.vilao.receberDano(true);
                    break;

                default:
                    System.out.println("Comando inválido");
            }
            this.atualizarPosicoes();
        }
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        this.regrasDeProducao();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDeJogo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDeJogo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDeJogo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDeJogo.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new TelaDeJogo().setVisible(true);

                SwingUtilities.invokeLater(() -> {
                    new TelaDeJogo(10, 10);

                });

            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
